# https://contest.yandex.ru/contest/28412/problems/B/
# B. Посадка в самолет
# Ограничение времени	2 секунды
# Ограничение памяти	512Mb
# Ввод	стандартный ввод или input.txt
# Вывод	стандартный вывод или output.txt
# В самолете 
# n
#  рядов и по три кресла слева и справа в каждом ряду. Крайние кресла (A и F) находятся у окна, центральные (C и D) – у прохода. На регистрацию приходят группы из одного, двух или трех пассажиров. Они желают сидеть рядом, то есть на одном ряду и на одной стороне: левой или правой. Например, группа из двух пассажиров может сесть на кресла B и C, но не может сесть на кресла C и D, потому что они разделены проходом, а также не может сесть на кресла A и C, потому что тогда они окажутся не рядом. Кроме того, один из пассажиров каждой группы очень требовательный – он хочет сесть либо у окна, либо у прохода. Конечно же, каждая группа из пассажиров хочет занять места в ряду с как можно меньшим номером, ведь тогда они скорее выйдут из самолета после посадки. Для каждой группы пассажиров определите, есть ли места в самолете, подходящие для них.
# Формат ввода
# Первая строка содержит число 
# n
#  (
# 1
# ≤
# n
# ≤
# 1
# 0
# 0
# ) – количество рядов в самолете. Далее в 
# n
#  строках вводится изначальная рассадка в самолете по рядам (от первого до 
# n
# -го), где символами . (точка) обозначены свободные места, символами # (решетка) обозначены занятые места, а символами _ (нижнее подчеркивание) обозначен проход между креслами C и D каждого ряда.
# Следующая строка содержит число 
# m
#  (
# 1
# ≤
# m
# ≤
# 1
# 0
# 0
# ) – количество групп пассажиров. Далее в 
# m
#  строках содержатся описания групп пассажиров. Формат описания такой: 
# n
# u
# m
# s
# i
# d
# e
# p
# o
# s
# i
# t
# i
# o
# n
# , где 
# n
# u
# m
#  – количество пассажиров (число 
# 1
# , 
# 2
#  или 
# 3
# ), 
# s
# i
# d
# e
#  – желаемая сторона самолета (строка left или right), 
# p
# o
# s
# i
# t
# i
# o
# n
#  – желаемое место требовательного пассажира (строка aisle или window).

# Формат вывода
# Если группа может сесть на места, удовлетворяющие ее требованиям, то выведите строку Passengers can take seats: и список их мест в формате 
# r
# o
# w
# l
# e
# t
# t
# e
# r
# , упорядоченный по возрастанию буквы места. Затем выведите в 
# n
#  строках получившуюся рассадку в самолете, в формате, описанном выше, причем места, занятые текущей группой пассажиров, должны быть обозначены символом X.
# Если группа не может найти места, удовлетворяющие ее требованиям, то выведите строку Cannot fulfill passengers requirements.
# Ответ сравнивается с правильным посимвольно, поэтому ваше решение не должно выводить никаких лишних символов, в том числе лишних переводов строк или пробельных символов в концах строк. В конце каждой строки (включая последнюю) должен быть выведен символ перевода строки.



file = open("input.txt", "r")
# Первая строка содержит число n количество рядов в самолете
n = int(file.readline())
# Во второй строке содержатся n целых чисел ai  где ai означает исходный объём кислоты в i-м резервуаре в литрах.
ai = tuple(map(int, file.readline().split()))
file.close()


print('n=',n)
print('ai=',ai)

max=0
for a in ai:
    if a>max:
        max=a
print('a=',a)

res=[]
for i in range(n):
    res.append(max-ai[i])

print(*res, sep=' ')

count=-1
if(res[0]!=0):
    k=res[0]
    for i in res:
        if(i!=k and i!=0):
            count=-1
            break
        elif(k==i):
            count=i
# print('count=',count)
print(count)
